---

- name: Check current golang version
  command: bash -c "/usr/local/go/bin/go version|sed -e 's/go version go//g'|cut -d' ' -f1"
  ignore_errors: yes
  register: go_version
  changed_when: false
  become: yes

- name: continue only when version is older
  fail: msg="Version already exists"
  when: go_version.stdout != "" and "go_version.stdout | version_compare('{{ new_go_version }}', operator='ge', strict=True)"

- name: download golang tar
  get_url:
    url: "https://storage.googleapis.com/golang/go{{ new_go_version }}.linux-amd64.tar.gz"
    dest: "/tmp"
    mode: 0440
  become: yes

- name: Remove old installation of Go
  file:
    path: /usr/local/go
    state: absent
  become: yes

- name: Extract the Go tarball
  unarchive:
    src: "/tmp/go{{ new_go_version }}.linux-amd64.tar.gz"
    dest: /usr/local
    copy: no
  become: yes

  # - name: create go directories in home
  #   file:
  #     path: "{{ item }}"
  #     state: directory
  #     owner: "{{ file_owner }}"
  #     group: "{{ file_owner }}"
  #     mode: 0775
  #   with_items:
  #   - "{{ home_dir }}/go"
  #   - "{{ home_dir }}/go/bin"

  # - name: modify .bashrc
  #   blockinfile:
  #     dest: "{{ home_dir }}/.bashrc"
  #     block: |
  #       export GOPATH=$HOME/go
  #       export GOBIN=$GOPATH/bin
  #       export PATH=$GOBIN:$PATH:/usr/local/go/bin
  #     marker: '# {mark} ANSIBLE MANAGED BLOCK - changes for golang'
  #     insertafter: EOF
  #     create: yes